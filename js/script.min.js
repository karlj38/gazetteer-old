function init(){window.map=L.map("map",{minZoom:2,maxBounds:[[-180,-180],[180,180]],zoomControl:!1}).fitWorld(),window.countryMarker=L.marker(),window.cityMarkers=L.layerGroup(),window.mountainMarkers=L.layerGroup(),window.universityMarkers=L.layerGroup(),window.covidMarkers=L.layerGroup();const t=L.tileLayer.provider("Esri.WorldImagery").addTo(map),e=L.tileLayer.provider("NASAGIBS.ViirsEarthAtNight2012"),n=L.tileLayer.provider("Jawg.Streets",{accessToken:"Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE"}),a=L.tileLayer.provider("Jawg.Dark",{accessToken:"Kyyk5x2h2cziidv4NudH48i2lgxN5j1e3lo5CtRHb8th7m5mbfxeq7qB71thO2ZE"}),o={Streets:n,Dark:a,Satellite:t,Night:e};L.control.layers(o).addTo(map),L.control.zoom({position:"bottomleft"}).addTo(map),map.on("locationfound",onLocationFound),map.on("locationerror",onLocationError),map.locate(),map.on("click",onMapClick)}function onLocationFound(t){const e=t.latlng.lat,n=t.latlng.lng;getCountry({lat:e,lng:n})}function onLocationError(t){alert(t.message)}function getCountryList(){$.getJSON("php/api",{get:"countryList"},function(t,e){t.forEach(t=>{const e=t[0].replace(/ /g,"-");$("#countries").append(`<option id="${e}" value="${t[0]}" data="${t[1]}">${t[0]}</option>`)})}).then(checkURLHash)}function checkURLHash(){location.hash&&(hash=decodeURI(location.hash.substring(1)),validateSearch(hash))}function validateSearch(t){const e=t.replace(/ /g,"-");$(`#${e}`).length?(window.countryName=t,window.countryCode=$(`#${e}`).attr("data"),getCountry({countryName:countryName})):alert("Not a valid country")}function submitForm(t){t.preventDefault();const e=$("#countryList").val();validateSearch(e)}function onMapClick(t){const e=t.latlng.lat%90,n=t.latlng.lng>180?t.latlng.lng-360:t.latlng.lng;getCountry({lat:e,lng:n})}function getCountry({countryName:t,lat:e,lng:n}){resetMap();let a={get:"country"};t?a.country=t:e&&n&&(a.lat=e,a.lng=n),$.getJSON("php/api",a,function(t,a){console.log(t),e&&n&&(window.countryName=t.components.country,window.countryCode=t.components.country_code.toUpperCase()),window.countryData=t,document.title=`Gazetteer | ${window.countryName}`,location.hash=window.countryName,getBorders(),countryPopup()})}function resetMap(){$("#infoContainer > .row").empty(),"block"===$("#infoContainer").css("display")&&closePanel(),window.borders&&map.removeLayer(borders),map.removeLayer(countryMarker),map.removeLayer(cityMarkers),map.removeLayer(mountainMarkers),map.removeLayer(universityMarkers),map.removeLayer(covidMarkers)}function getBorders(){$.getJSON("php/api",{get:"borders",countryCode:countryCode},function(t,e){let n=[];"MultiPolygon"===t.geometry.type?t.geometry.coordinates.forEach(t=>{let e=[];t[0].forEach(t=>{const n=t[1],a=t[0];e.push([n,a])}),n.push(e)}):t.geometry.coordinates[0].forEach(t=>{const e=t[0],a=t[1];n.push([a,e])}),map.flyToBounds(n),window.borders=L.polygon(n).addTo(map)}).fail(function(){alert(`Borders not found (${countryCode})`)})}function countryPopup(){const t=countryData.rest.latlng[0],e=countryData.rest.latlng[1],n=countryData.rest.flag,a=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-flag",markerColor:"blue"});countryMarker=L.marker([t,e],{icon:a,title:countryName}).addTo(map);let o=`<h1 class="text-center">${countryName}</h1>`;o+='<button id="expand" class="btn btn-primary text-center mx-auto d-block" onclick="moreInfo()">Learn more</button>',countryMarker.bindPopup(o).openPopup(),$(".leaflet-popup-content-wrapper").prepend(`<img src="${n}" class="w-100">`).addClass("pt-0 px-0 overflow-hidden"),countryMarker.on("popupopen",function(){"block"===$("#infoContainer").css("display")?$("#expand").text("Hide panel"):$("#expand").text("Learn more")})}function moreInfo(){"none"===$("#infoContainer").css("display")?(openPanel(),$("#infoSection").length||(countryInfo(),currencies(),cities(),mountains(),medals(),movies(),universities())):closePanel()}function openPanel(){$("#map").animate({height:"-=33vh"}),$("#infoContainer").slideToggle(),$("#expand").text("Hide panel")}function closePanel(){$("#map").animate({height:"+=33vh"}),$("#infoContainer").slideToggle(),$("#expand").text("Learn more")}function countryInfo(){country={},country["Country Code"]=countryData.components.country_code,country.Capital=countryData.rest.capital||null,country.Continent=countryData.components.continent||null,country.Population=countryData.rest.population||null;const t=countryData.rest.area||null;country["Land Area"]=t?`${t} km<sup>2</sup>`:null;const e=countryData.annotations.timezone.short_name||null;let n=countryData.annotations.timezone.offset_string||null;n=n?`(${n})`:null,country["Time Zone"]=`${e} ${n}`,callcode=countryData.annotations.callingcode||null,country["Calling Code"]=callcode?`+${callcode}`:null,country.TLD=countryData.rest.topLevelDomain||null,country.Demonym=countryData.rest.demonym||null;const a=countryData.wiki||null;country.Wikipedia=a?`<a href="${a}" target="_blank">Wikipedia</a>`:null;let o=[];countryData.rest.languages.forEach(t=>o.push(t.name)),country.Language=o.join(", ");let r=Object.keys(country).sort(),i={};r.forEach(t=>i[t]=country[t]),$("#infoContainer div.row").append('<div id="infoSection" class="col-md-4 border"></div>'),$("#infoSection").append("<h2>Country Information</h2>"),$("#infoSection").append('<table class="table table-sm table-hover"></table>'),$("#infoSection table").append("<tbody></tbody>");for(let t in i)i[t]&&($("#infoSection tbody").append("<tr></tr>"),$("#infoSection tr:last-child").append(`<th scope"row">${t}</th>`),$("#infoSection tr:last-child").append(`<td >${i[t]}</td>`));$("#infoSection").append('<p>\n  Source\n  <a href="https://www.geonames.org/" target="_blank">GeoNames</a> &\n  <a href="https://opencagedata.com/" target="_blank">OpenCage</a>\n</p>')}function currencies(){if(currency=countryData.annotations.currency||null){const t=currency.html_entity||currency.symbol||null,e=currency.iso_code||null,n=currency.name||null,a=currency.subunit||null;e&&(displayCurrency({symbol:t,code:e,name:n,sub:a}),displayRates(e))}}function displayCurrency({symbol:t,code:e,name:n,sub:a}){$("#infoContainer div.row").append('<div id="currencySection" class="col-md-4 border"></div>'),$("#currencySection").append("<h2>Finance</h2>"),$("#currencySection").append('<table class="table table-sm table-hover"></table>'),$("#currencySection table").append('<tbody id="currencies"></tbody>'),$mainCurrency=$("<tr></tr>");const o="EUR"===e?"svg\\Europe.svg":countryData.rest.flag;$mainCurrency.append(`<td><img src="${o}" class="currencyFlag" /></td>`),$mainCurrency.append(`<th scope='row'>${e}</th>`),$mainCurrency.append(`<td>${n} (${t} / ${a})</td>`),$("#currencies").append($mainCurrency)}function displayRates(t){$.getJSON("php/api",{get:"currencies",base:t},function(t,e){if(t.success){for(const e in t.rates){const n=Number(t.rates[e]).toFixed(3),a=t.flags[e];$currency=$("<tr/>"),$currency.append(`<td><img src='${a}' class='currencyFlag'></td>`),$currency.append(`<th scope='row'>${e}</th>`),$currency.append(`<td>${n}</td>`),$("#currencies").append($currency)}$("#currencySection").append('<p>\n          Source\n          <a href="https://exchangerate.host" target="_blank"\n            >exchangerate.host</a\n          >\n        </p>')}else $("#currencySection").append('<p>\n          <a href="https://exchangerate.host" target="_blank"\n            >exchangerate.host unavailable</a\n          >\n        </p>')})}function mountains(){const t=countryData.components.country_code;$.getJSON("php/api",{get:"mountains",countryCode:t},function(t,e){let n=[];const a=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-mountain",markerColor:"green"});t.forEach(t=>{const e=L.marker([t.lat,t.lng],{icon:a,title:t.name});let o=`<h2>${t.name}</h2>`,r=t.elevation||null;r=r?r+" m":"undefined",o+=`<p><strong>Elevation:</strong> ${r} </p>`,t.wiki&&(o+=`<p><a href="${t.wiki}" target="_blank">Wikipedia</a></p>`),e.bindPopup(o),n.push(e)}),window.mountainMarkers=L.layerGroup(n).addTo(map)})}function cities(){const t=countryData.components.country_code;$.getJSON("php/api",{get:"cities",countryCode:t},function(t,e){let n=[];t.forEach(t=>{const e=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-city",markerColor:t.name===countryData.rest.capital?"red":"yellow"}),a=L.marker([t.lat,t.lng],{icon:e,title:t.name});let o=`<h2>${t.name}</h2>`;t.name===countryData.rest.capital&&(o+='<p class="lead">Capital</p>'),o+=`<p><strong>Population:</strong> ${t.population}</p>`,t.wiki&&(o+=`<p><a href="${t.wiki}" target="_blank">Wikipedia</a></p>`),t.weather&&(o+=weather(t.weather)),a.bindPopup(o),n.push(a)}),window.cityMarkers=L.layerGroup(n).addTo(map)})}function weather(t){return w=`\n  <h3>Current Weather</h3>\n    <table id="weather" class="table">\n      <tbody>\n      ${buildWeather(t)}\n      </tbody>\n    </table>\n    <p>Source <a href="https://openweathermap.org/" target="_blank">OpenWeather</a></p>`,w}function buildWeather(t){const e=`<i class="wi wi-owm-${t.weather[0].id}"></i>`;let n=t.weather[0].description;n=n[0].toUpperCase()+n.slice(1);const a=Math.round(t.main.temp),o=Math.round(t.main.feels_like),r=Math.round(t.main.temp_max),i=Math.round(t.main.temp_min),c=`<i class = "wi wi-wind from-${t.wind.deg}-deg"></i>`,s=t.wind.deg,l=Math.round(t.wind.speed),d=t.main.pressure,p=t.main.humidity,u=convertTime(t.sys.sunrise),m=convertTime(t.sys.sunset);let y=`\n  <tr>\n    <td class="summary">${e} ${n}</td>\n    <td ><span class="summary">${a}<i class = "wi wi-celsius"></i> </span>Feels like ${o}<i class = "wi wi-celsius"></i></td>\n  </tr>\n  <tr>\n    <td><i class = "wi wi-thermometer"></i> ${r}<i class = "wi wi-celsius"></i></td>\n    <td><i class = "wi wi-thermometer-exterior"></i> ${i}<i class = "wi wi-celsius"></i></td>\n  </tr>\n  <tr>\n    <td><i class= "wi wi-strong-wind"></i> ${l} m/s</td>\n    <td>${c} ${s}&#176;</td>\n  </tr>\n  <tr>\n    <td><i class = "wi wi-humidity"></i> ${p} % </td>\n    <td><i class = "wi wi-barometer"></i> ${d} hPa</td>\n  </tr>\n  <tr>\n  <td><i class = "wi wi-sunrise"></i> ${u}</td>\n  <td><i class = "wi wi-sunset"></i> ${m}</td>\n  </tr>`;return y}function convertTime(t){const e=new Date(1e3*t);let n=e.getHours();n=n<10?`0${n}`:n;let a=e.getMinutes();return a=a<10?`0${a}`:a,`${n}:${a}`}function medals(){$.getJSON("php/api",{get:"medals",country:countryName},function(t,e){$("#infoContainer div.row").append('<div id="medalsSection" class="col-md-4 border"></div>'),$("#medalsSection").append("<h2>Olympic Medals</h2>"),$("#medalsSection").append('<table class="table table-sm table-hover"></table>');const n='\n      <thead>\n        <tr>\n          <th></th>\n          <th scope="col" class="text-center">Total</th>\n          <th scope="col" class="text-center">Summer</th>\n          <th scope="col" class="text-center">Winter</th>\n        </tr>\n    </thead>';$("#medalsSection table").append(n),$("#medalsSection table").append('<tbody id="medals"></tbody>');let a=`<tr>\n      <td class="text-center"><img src="svg/Gold_medal.svg"></td>\n      <td class="text-center">${t.gold}</td>\n      <td class="text-center">${t.so_gold}</td>\n      <td class="text-center">${t.wo_gold}</td>\n      </tr>`;a+=`<tr>\n      <td class="text-center"><img src="svg/Silver_medal.svg"></td>\n      <td class="text-center">${t.silver}</td>\n      <td class="text-center">${t.so_silver}</td>\n      <td class="text-center">${t.wo_silver}</td>\n      </tr>`,a+=`<tr>\n      <td class="text-center"><img src="svg/Bronze_medal.svg"></td>\n      <td class="text-center">${t.bronze}</td>\n      <td class="text-center">${t.so_bronze}</td>\n      <td class="text-center">${t.wo_bronze}</td>\n      </tr>`,a+=`<tr>\n      <td class="text-center"><img src="svg/GoldSilverBronze_medals.svg"></td>\n      <td class="text-center">${t.medal}</td>\n      <td class="text-center">${t.so_medal}</td>\n      <td class="text-center">${t.wo_medal}</td>\n      </tr>`,$("#medals").append(a),"-"!==t.mostsuccessfulsport&&$("#medalsSection").append(`Most successful sport: ${t.mostsuccessfulsport}`),$("#medalsSection").append('<p>\n      Source\n      <a\n        href="https://data.world/johayes13/summer-winter-olympic-games/workspace/file?filename=Olympics.csv"\n        target="_blank"\n        >data.world</a\n      >\n    </p>')})}function movies(){$.getJSON("php/api",{get:"movies",country:countryName},function(t,e){t.length&&(buildMovieCarousel(),fillMovieCarousel(t))})}function buildMovieCarousel(){$("#infoContainer .row").append('<div id="movieSection" class="col border"></div>'),$("#movieSection").append("<h2>Notable Movies</h2>"),$("#movieSection").append('<div id="movieCarousel" class="carousel slide" data-ride="carousel"></div'),$("#movieCarousel").append('<div id="carouselInsert" class="carousel-inner"></div>'),$("#movieCarousel").append('<a\n  class="carousel-control-prev"\n  href="#movieCarousel"\n  role="button"\n  data-slide="prev"\n>\n  <span\n    class="carousel-control-prev-icon"\n    aria-hidden="true"\n  ></span>\n  <span class="sr-only">Previous</span>\n</a>'),$("#movieCarousel").append('<a\n  class="carousel-control-next"\n  href="#movieCarousel"\n  role="button"\n  data-slide="next"\n>\n  <span\n    class="carousel-control-next-icon"\n    aria-hidden="true"\n  ></span>\n  <span class="sr-only">Next</span>\n</a>')}function fillMovieCarousel(t){t.forEach((t,e)=>{details=`\n    <div class="carousel-item ${0==e?"active":""}">\n      <div class="container">\n        <div class = "row">\n          <div class="d-none d-md-flex col-md-6 justify-content-center">\n          <a href="https://www.imdb.com/title/${t.imdbID}" target="_blank" class="float-left mr-3 mb-3"><img src="${t.poster}"></a>\n          </div>\n          <div class="col-md-6 movieDesc">\n          <a href="https://www.imdb.com/title/${t.imdbID}" target="_blank" class="d-md-none float-left mr-3 mb-3"><img src="${t.poster}"></a>\n            <p class="lead"><a href="https://www.imdb.com/title/${t.imdbID}" target="_blank">${t.Title}, ${t.Year} (${t.Runtime})</a></p>\n            <p>IMDb Rating: ${t.imdbRating}</p>\n            <p>Awards: ${t.Awards}</p>\n            <p>Starring: ${t.Actors}</p>\n            <p class=" float-left float-md-none">Source <a href="https://www.imdb.com/" target="_blank">IMDb</a> \n            via <a href="https://data.world/studentoflife/imdb-top-250-lists-and-5000-or-so-data-records/workspace/file?filename=IMDB_Top250movies2_OMDB_Detailed.csv" target="_blank">data.world</a> \n            & <a href="https://www.omdbapi.com/" target="_blank">OMDb API</a></p>\n          </div>\n        </div>\n      </div>\n    </div>`,$("#carouselInsert").append(details)})}function universities(){$.getJSON("php/api",{get:"universities",country:countryName},function(t,e){console.log(t);let n=[];const a=L.ExtraMarkers.icon({prefix:"fa",icon:"fa-university",markerColor:"black"});t.forEach(t=>{const e=L.marker([t.lat,t.lng],{icon:a,title:t.uni});let o=`<h2>${t.uni}</h2>`;o+=`<p><strong>World Rank:</strong> ${t.world}</p>`,o+=`<p><strong>National Rank:</strong> ${t.nat}</p>`,o+=`<p><a href="${t.wiki}" target="_blank">Wikipedia</a></p>`,o+='<p>Source <a href="https://cwur.org/2020-21.php">CWUR (2020-2021)</a> via <a href="https://data.world/proydu/world-university-rankings-2020-21" target="_blank">data.world</a></p>',e.bindPopup(o),n.push(e)}),window.universityMarkers=L.layerGroup(n).addTo(map)})}function covid(){resetMap(),$.getJSON("php/api",{get:"covid"},function(t,e){console.log(t),t.sort((t,e)=>e.cases-t.cases),t.forEach(t=>{const e=1500*Math.sqrt(t.cases),n=`\n      <h2>${t.countryName} <img src="${t.flag}" class="thumbnail"></h2>\n      <p>Data from ${t.fromDate} to ${t.toDate}</p>\n      <p><strong>Recent cases : </strong> ${t.cases}</p>\n      <p><strong>Recent deaths : </strong> ${t.deaths}</p>\n      <p>Source <a href="https://github.com/CSSEGISandData/COVID-19" target="_blank">John Hopkins University</a> via <a href="https://covidapi.info" target="_blank">covidapi.info</a></p>\n    `;let a=L.popup().setLatLng([t.lat,t.lng]).setContent(n);L.circle([t.lat,t.lng],{radius:e,color:"#f00",weight:1}).bindPopup(a).addTo(covidMarkers).on("click",onMapClick).on("mouseover",function(t){this.openPopup()})}),covidMarkers.addTo(map)})}$(function(){getCountryList(),init()}),$(window).on("load",function(){$("#preloader").length&&$("#preloader").delay(100).fadeOut("slow",function(){$(this).remove()})});